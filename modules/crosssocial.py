import aiohttp

from time import time

from . import phrase
from .ai import ai_servers


async def ping(arg, timestamp, vk=False) -> str:
    ping = round(time() - timestamp, 2)
    if ping < 0:
        ping = phrase.ping.min
    else:
        ping = f"–∑–∞ {str(ping)} —Å–µ–∫."
    all_servers_ping = []
    if arg in [
        "all",
        "–ø–æ–¥—Ä–æ–±–Ω–æ",
        "–ø–æ–¥—Ä–æ–±–Ω—ã–π",
        "–ø–æ–ª–Ω",
        "–ø–æ–ª–Ω—ã–π",
        "–≤–µ—Å—å",
        "–∏–∏",
        "—Ñ—É–ª–ª",
        "full",
    ]:
        async with aiohttp.ClientSession() as session:
            n = 1
            for server in ai_servers:
                timestamp = time()
                async with session.get("https://" + server + "/") as request:
                    try:
                        if await request.text() == "ok":
                            server_ping = round(time() - timestamp, 2)
                            if server_ping > 0:
                                server_ping = f"–∑–∞ {server_ping} —Å–µ–∫."
                            else:
                                server_ping = phrase.ping.min
                            all_servers_ping.append(
                                f"\nüåê : –°–µ—Ä–≤–µ—Ä {n} –æ—Ç–≤–µ—Ç–∏–ª {server_ping}"
                            )
                        else:
                            all_servers_ping.append(f"\n‚ùå : –°–µ—Ä–≤–µ—Ä {n} - –û—à–∏–±–∫–∞!")
                    except TimeoutError:
                        all_servers_ping.append(f"‚ùå : –°–µ—Ä–≤–µ—Ä {n} - –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!")
                n += 1
    elif arg != "":
        return
    text = phrase.ping.set.format(ping) + "".join(all_servers_ping)
    if vk:
        text = text.replace("**", "")
    return text
